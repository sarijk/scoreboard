#include <ESP8266WiFi.h>
#include <espnow.h>
#include <Keypad.h>

uint8_t receiverMacAddress[] = {0x6C, 0xC8, 0x40, 0x06, 0xCD, 0xD0};

const byte ROWS = 3;
const byte COLS = 4;
char hexaKeys[ROWS][COLS] = {
    {'1', '2', '3', 'A'},
    {'4', '5', '6', 'B'},
    {'7', '8', '9', 'C'}
};
byte rowPins[ROWS] = {D5, D6, D7};
byte colPins[COLS] = {D1, D2, D3, D4};

Keypad customKeypad = Keypad(makeKeymap(hexaKeys), rowPins, colPins, ROWS, COLS);

unsigned long lastDebounceTime = 0;
const unsigned long debounceDelay = 200; // ms

void OnDataSent(uint8_t *mac_addr, uint8_t sendStatus) {
    Serial.print("Send Status: ");
    Serial.println(sendStatus == 0 ? "Success" : "Fail");
}

void setup() {
    Serial.begin(9600);

    WiFi.mode(WIFI_STA);
    WiFi.disconnect();

    if (esp_now_init() != 0) {
        Serial.println("Error initializing ESP-NOW");
        return;
    }
    esp_now_set_self_role(ESP_NOW_ROLE_CONTROLLER);
    esp_now_register_send_cb(OnDataSent);
    esp_now_add_peer(receiverMacAddress, ESP_NOW_ROLE_SLAVE, 1, NULL, 0);
}

void loop() {
    char key = customKeypad.getKey();

    if (key != NO_KEY && (millis() - lastDebounceTime > debounceDelay)) {
        lastDebounceTime = millis();
        Serial.println(key);
        esp_now_send(receiverMacAddress, (uint8_t *)&key, sizeof(key));
    }
}
