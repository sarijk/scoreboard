#include <Wire.h>
#include <esp_now.h>
#include <WiFi.h>

#define DATA 25
#define CLK 26
#define LATCH 27

byte segment[10] = {0x3F,0x06,0x5B,0x4F,0x66,0x6D,0x7D,0x07,0x7F,0x6F};
byte ani_char[8] = {0x01,0x02,0x04,0x08,0x10,0x20,0x01,0x40};

int skor1_d1 = 0, skor1_d2 = 0;
int skor2_d1 = 0, skor2_d2 = 0;
int win_a = 0, win_b = 0, set = 0;

typedef struct struct_message {
    char a;
} struct_message;

struct_message myData;
char lastData = 0;

void OnDataRecv(const uint8_t *mac, const uint8_t *incomingData, int len) {
    memcpy(&myData, incomingData, sizeof(myData));
    Serial.println(myData.a);
}

void setup() {
    Serial.begin(9600);
    WiFi.mode(WIFI_STA);

    pinMode(DATA, OUTPUT);
    pinMode(CLK, OUTPUT);
    pinMode(LATCH, OUTPUT);

    for (int i = 0; i < 8; i++) {
        digitalWrite(LATCH, LOW);
        for (int j = 0; j < 7; j++) {
            shiftOut(DATA, CLK, MSBFIRST, ~ani_char[i]);
        }
        digitalWrite(LATCH, HIGH);
        delay(500);
    }

    if (esp_now_init() != ESP_OK) {
        Serial.println("Error initializing ESP-NOW");
        return;
    }
    esp_now_register_recv_cb(OnDataRecv);
}

void loop() {
    if (myData.a != lastData) {
        lastData = myData.a;

        if (myData.a == '1') {
            skor1_d1++;
            if (skor1_d1 > 9) { skor1_d1 = 0; skor1_d2++; if (skor1_d2 > 9) skor1_d2 = 0; }
        }
        else if (myData.a == '4') {
            skor1_d1--;
            if (skor1_d1 < 0) { skor1_d1 = 9; skor1_d2--; if (skor1_d2 < 0) skor1_d2 = 9; }
        }
        else if (myData.a == '2') {
            win_a++; set++; skor1_d1 = skor1_d2 = skor2_d1 = skor2_d2 = 0;
            if (win_a > 3) win_a = 0;
        }
        else if (myData.a == '5') {
            win_a--; if (win_a < 0) win_a = 3;
        }
        else if (myData.a == 'A') {
            skor2_d1++;
            if (skor2_d1 > 9) { skor2_d1 = 0; skor2_d2++; if (skor2_d2 > 9) skor2_d2 = 0; }
        }
        else if (myData.a == 'B') {
            skor2_d1--;
            if (skor2_d1 < 0) { skor2_d1 = 9; skor2_d2--; if (skor2_d2 < 0) skor2_d2 = 9; }
        }
        else if (myData.a == '3') {
            win_b++; set++; skor1_d1 = skor1_d2 = skor2_d1 = skor2_d2 = 0;
            if (win_b > 3) win_b = 0;
        }
        else if (myData.a == '6') {
            win_b--; if (win_b < 0) win_b = 3;
        }
        else if (myData.a == '7') {
            set++; skor1_d1 = skor1_d2 = skor2_d1 = skor2_d2 = 0;
            if (set > 5) set = 0;
        }
        else if (myData.a == '8') {
            skor1_d1 = skor1_d2 = skor2_d1 = skor2_d2 = 0; win_a = win_b = set = 0;
        }
        else if (myData.a == '9') {
            set--; if (set < 0) set = 5;
        }
    }

    digitalWrite(LATCH, LOW);
    shiftOut(DATA, CLK, MSBFIRST, ~segment[skor1_d1]);
    shiftOut(DATA, CLK, MSBFIRST, ~segment[skor1_d2]);
    shiftOut(DATA, CLK, MSBFIRST, ~segment[win_a]);
    shiftOut(DATA, CLK, MSBFIRST, ~segment[set]);
    shiftOut(DATA, CLK, MSBFIRST, ~segment[win_b]);
    shiftOut(DATA, CLK, MSBFIRST, ~segment[skor2_d1]);
    shiftOut(DATA, CLK, MSBFIRST, ~segment[skor2_d2]);
    digitalWrite(LATCH, HIGH);

    delay(50);
}
